{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./node_modules/canvas/browser.js","webpack://office-addin-taskpane-js/./node_modules/canvas/lib/parse-font.js","webpack://office-addin-taskpane-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/compat get default export","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/io.js","webpack://office-addin-taskpane-js/./src/taskpane/wordMatching.js","webpack://office-addin-taskpane-js/./src/taskpane/canvasGenerator.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n","'use strict'\n\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00'\nconst styles = 'italic|oblique'\nconst variants = 'small-caps'\nconst stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\nconst units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\nconst string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\n\n// [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\nconst weightRe = new RegExp(`(${weights}) +`, 'i')\nconst styleRe = new RegExp(`(${styles}) +`, 'i')\nconst variantRe = new RegExp(`(${variants}) +`, 'i')\nconst stretchRe = new RegExp(`(${stretches}) +`, 'i')\nconst sizeFamilyRe = new RegExp(\n  `([\\\\d\\\\.]+)(${units}) *((?:${string})( *, *(?:${string}))*)`)\n\n/**\n * Cache font parsing.\n */\n\nconst cache = {}\n\nconst defaultHeight = 16 // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = str => {\n  // Cached\n  if (cache[str]) return cache[str]\n\n  // Try for required properties first.\n  const sizeFamily = sizeFamilyRe.exec(str)\n  if (!sizeFamily) return // invalid\n\n  // Default values and required properties\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }\n\n  // Optional, unordered properties.\n  let weight, style, variant, stretch\n  // Stop search at `sizeFamily.index`\n  const substr = str.substring(0, sizeFamily.index)\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\n  if ((style = styleRe.exec(substr))) font.style = style[1]\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\n\n  // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75\n      break\n    case 'pc':\n      font.size *= 16\n      break\n    case 'in':\n      font.size *= 96\n      break\n    case 'cm':\n      font.size *= 96.0 / 2.54\n      break\n    case 'mm':\n      font.size *= 96.0 / 25.4\n      break\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75\n      break\n    case 'q':\n      font.size *= 96 / 25.4 / 4\n      break\n  }\n\n  return (cache[str] = font)\n}\n","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t912: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","export async function readImages(files) {\n  let imagePromises = files.map((file) => {\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.onload = (e) => {\n        const img = new Image();\n        img.onload = () => resolve({ name: file.name.split(\".\")[0].toLowerCase(), image: img });\n        img.onerror = reject;\n        img.src = e.target.result;\n      };\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  });\n  let images = await Promise.all(imagePromises);\n  return new Map(images.map((obj) => [obj.name, obj.image]));\n}\n\nexport async function readWordCSV() {\n  const wordsPath = \"assets/Tabelle_form_of.csv\";\n  const csv = await fetch(wordsPath);\n  const text = await csv.text();\n  const lines = text.trim().split(/\\r?\\n/);\n  const map = new Map();\n  lines.forEach(line => {\n    const pair = line.split(\";\");\n    if (pair.length === 2) {\n      map.set(pair[0], pair[1]);\n    }\n  })\n  return map;\n}\n","import { readWordCSV } from \"./io\";\n\nconst matchExpression = /([\\wäöüßÄÖÜ]+('[\\wäöüßÄÖÜ]+)*)/g;\nlet wordlist = new Map();\n\nexport async function initWordList() {\n  wordlist = await readWordCSV();\n}\n\nexport function getBasicWord(word) {\n  return wordlist.get(word)\n}\n\nexport function matchWordToImage(word, images) {\n  word = word.toLowerCase();\n  if (images.has(word)) {\n    return images.get(word);\n  } \n  return advancedWord2Image(word, images);\n}\n\nfunction advancedWord2Image(word, images) {\n  if (!wordlist.has(word)) {\n    return null;\n  }\n  const basicWord = wordlist.get(word);\n  if (images.has(basicWord)) {\n    return images.get(basicWord);\n  }\n  return null;\n}\n\nexport function getWordsLowerCase(text) {\n  return text.toLowerCase().match(matchExpression);\n}\n\nexport function getWords(text) {\n  return text.match(matchExpression);\n}\n\nexport function matchFiles(files, text) {\n  const words = getWordsLowerCase(text);\n  words.forEach(word => {\n    if (wordlist.has(word)) {\n      words.push(wordlist.get(word));\n    }\n  })\n  return Array.from(files).filter((file) => words.includes(file.name.split(\".\")[0].toLowerCase()));\n}\n","import { getWords, matchWordToImage } from \"./wordMatching\";\nconst { createCanvas } = require(\"canvas\");\n\nfunction canvasConfig(imageSize, padding, textSpace, numPictures) {\n  this.imageSize = imageSize;\n  this.padding = padding;\n  this.textSpace = textSpace;\n  this.numPictures = numPictures;\n\n  this.width = imageSize * numPictures + padding * (numPictures + 1);\n  this.height = imageSize + textSpace;\n}\n\nfunction imageTransformation(conf, naturalWidth, naturalHeight, i) {\n  const scale = conf.imageSize / Math.max(naturalWidth, naturalHeight);\n  const imgWidth = scale * naturalWidth;\n  const imgHeight = scale * naturalHeight;\n  const dx = (conf.imageSize - imgWidth) / 2;\n  const dy = (conf.imageSize - imgHeight) / 2;\n  const x = conf.padding * i + conf.imageSize * (i - 1) + dx;\n  const y = conf.padding + dy;\n  return { x, y, imgWidth, imgHeight };\n}\n\nfunction textTransformation(conf, i) {\n  const x = conf.padding * i + conf.imageSize * (i - 0.5);\n  const y = 0.9 * conf.height;\n  return { x, y };\n}\n\nfunction drawImages(ctx, conf, images, words) {\n  for (let i = 1; i <= conf.numPictures; i++) {\n    const img = matchWordToImage(words[i - 1], images);\n    if (img) {\n      let { x, y, imgWidth, imgHeight } = imageTransformation(conf, img.naturalWidth, img.naturalHeight, i);\n      ctx.drawImage(img, x, y, imgWidth, imgHeight);\n    }\n  }\n}\n\nfunction drawText(ctx, conf, words) {\n  // Set text style\n  ctx.fillStyle = \"#000000\";\n  ctx.font = \"48px Arial\";\n  ctx.textAlign = \"center\";\n  ctx.textBaseline = \"middle\";\n\n  for (let i = 1; i <= conf.numPictures; i++) {\n    let { x, y } = textTransformation(conf, i);\n    ctx.fillText(words[i - 1], x, y);\n  }\n}\n\nexport function createCanvasBase64(images, text) {\n  const words = getWords(text);\n\n  const numPictures = words.length;\n  const imageSize = 245;\n  const padding = 20;\n  const textSpace = 0;\n\n  const conf = new canvasConfig(imageSize, padding, textSpace, numPictures);\n\n  const canvas = createCanvas(conf.width, conf.height);\n  const ctx = canvas.getContext(\"2d\");\n\n  drawImages(ctx, conf, images, words);\n  //drawText(ctx, conf, words, images.size);\n  // Convert canvas to Base64 string (without the data:image/png;base64, prefix)\n  return canvas.toDataURL().split(\",\")[1];\n}\n","import { createCanvasBase64 } from \"./canvasGenerator\";\nimport { matchFiles, initWordList, getBasicWord } from \"./wordMatching\";\nimport { readImages, readWordCSV } from \"./io\";\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.PowerPoint) {\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"insert-image\").onclick = () => clearMessage(submitTextAndImages);\n    document.getElementById(\"fileElem\").onchange = () => clearMessage(handleFiles);\n    clearMessage(loadCSV);\n  }\n});\n\nfunction getTextInput() {\n  return document.getElementById(\"text-input\").value;\n}\n\nfunction getFileInput() {\n  return document.getElementById(\"fileElem\").files;\n}\n\nfunction handleFiles() {\n  var p = document.getElementById(\"file_names\");\n  var files = document.getElementById(\"fileElem\").files;\n  p.textContent = \"\";\n  for (let i = 0; i < files.length; i++) {\n    p.textContent += files[i].name;\n    if (i !== files.length - 1) {\n      p.textContent += \", \";\n    }\n  }\n}\n\nasync function loadCSV() {\n  await initWordList();\n}\n\nasync function loadImages() {\n  const files = matchFiles(getFileInput(), getTextInput());\n  return readImages(files);\n}\n\nasync function submitTextAndImages() {\n  const images = await loadImages();\n  const base64Image = createCanvasBase64(images, getTextInput());\n  insertImage(base64Image);\n}\n\nfunction insertImage(image) {\n  Office.context.document.setSelectedDataAsync(\n    image,\n    {\n      coercionType: Office.CoercionType.Image,\n    },\n    (asyncResult) => {\n      if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n        setMessage(\"Error: \" + asyncResult.error.message);\n      }\n    }\n  );\n}\n\nasync function clearMessage(callback) {\n  document.getElementById(\"message\").innerText = \"\";\n  await callback();\n}\n\nfunction setMessage(message) {\n  document.getElementById(\"message\").innerText = message;\n}\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Sign Language Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <h1 class=\\\"ms-font-su\\\">Sign Language</h1> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <div class=\\\"padding\\\"> <button class=\\\"ms-Button\\\" id=\\\"insert-image\\\">Insert Image</button><br/><br/> <input class=\\\"ms-input\\\" id=\\\"text-input\\\" placeholder=\\\"Enter text here\\\"><br/><br/> <div id=\\\"drop-area\\\"> <form class=\\\"my-form\\\"> <p id=\\\"file_names\\\">Upload multiple files with the file dialog or by dragging and dropping images onto the dashed region</p> <input type=\\\"file\\\" id=\\\"fileElem\\\" multiple=\\\"multiple\\\" accept=\\\"image/*\\\"> <label class=\\\"button\\\" for=\\\"fileElem\\\">Select some files</label> </form> </div> </div> </main> <section id=\\\"display-msg\\\" class=\\\"ms-welcome__main\\\"> <div class=\\\"padding\\\"> <div id=\\\"message\\\"></div> </div> </section> </body> </html> \";\n// Exports\nexport default code;"],"names":["parseFont","exports","createCanvas","width","height","Object","assign","document","createElement","createImageData","array","arguments","length","ImageData","loadImage","src","options","Promise","resolve","reject","image","cleanup","onload","onerror","Error","string","weightRe","RegExp","styleRe","variantRe","stretchRe","sizeFamilyRe","cache","module","str","sizeFamily","exec","font","weight","style","stretch","variant","size","parseFloat","unit","family","replace","substr","substring","index","url","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","i","p","b","baseURI","self","href","_regeneratorRuntime","t","r","value","Symbol","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","_next","_throw","info","error","_asyncToGenerator","fn","args","apply","err","readImages","_x","_readImages","_callee","files","imagePromises","images","_context","map","file","reader","FileReader","img","Image","split","toLowerCase","target","result","readAsDataURL","all","Map","readWordCSV","_readWordCSV","_callee2","csv","text","lines","_context2","fetch","trim","line","pair","set","matchExpression","wordlist","initWordList","_initWordList","matchWordToImage","word","has","basicWord","advancedWord2Image","matchFiles","words","match","getWordsLowerCase","Array","from","filter","includes","require","canvasConfig","imageSize","padding","textSpace","numPictures","imageTransformation","conf","naturalWidth","naturalHeight","scale","Math","max","imgWidth","imgHeight","dx","dy","x","createCanvasBase64","getWords","canvas","ctx","_imageTransformation","drawImage","drawImages","getContext","toDataURL","getTextInput","getElementById","handleFiles","textContent","loadCSV","_loadCSV","loadImages","_loadImages","submitTextAndImages","_submitTextAndImages","_callee3","_context3","Office","context","setSelectedDataAsync","coercionType","CoercionType","asyncResult","message","status","AsyncResultStatus","Failed","innerText","clearMessage","_clearMessage","_callee4","callback","_context4","onReady","host","HostType","PowerPoint","display","onclick","onchange","___HTML_LOADER_IMPORT_0___","URL"],"sourceRoot":""}